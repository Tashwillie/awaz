generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DemoStatus {
  DRAFT
  READY
  CALLING
  COMPLETED
  EXPIRED
  FAILED
}

enum CallStatus {
  INITIATED
  RINGING
  CONNECTED
  FAILED
  COMPLETED
}

enum PhoneNumberStatus {
  ACTIVE
  INACTIVE
  PENDING
}

enum CallForwardingStatus {
  ACTIVE
  INACTIVE
  PENDING
}

enum PhoneSystemType {
  MOBILE
  VOIP
  PSTN
  LANDLINE
}

model DemoSession {
  id              String       @id @default(cuid())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  status          DemoStatus   @default(DRAFT)
  ttlExpiresAt    DateTime
  provider        String
  providerAgentId String?
  sourceIpHash    String?
  requestId       String?

  lead            Lead?
  businessContext BusinessContext?
  businessProfile BusinessProfile?
  calls           Call[]
  candidatePlaces CandidatePlace[]

  @@index([status])
  @@index([ttlExpiresAt])
}

model Lead {
  id            String       @id @default(cuid())
  demoSessionId String       @unique
  createdAt     DateTime     @default(now())
  name          String?
  email         String?
  phoneE164     String
  consent       Boolean      @default(false)

  DemoSession   DemoSession  @relation(fields: [demoSessionId], references: [id], onDelete: Cascade)

  @@index([phoneE164])
}

model BusinessContext {
  id            String       @id @default(cuid())
  demoSessionId String       @unique
  placeId       String
  name          String
  address       String
  website       String?
  phone         String?
  types         String[]
  rating        Float?
  userRatings   Int?
  hoursJson     Json?
  reviewsSample Json?
  geoLat        Float?
  geoLng        Float?

  DemoSession   DemoSession  @relation(fields: [demoSessionId], references: [id], onDelete: Cascade)

  @@index([placeId])
}

model BusinessProfile {
  id            String      @id @default(cuid())
  demoSessionId String      @unique
  createdAt     DateTime    @default(now())
  json          Json

  DemoSession   DemoSession @relation(fields: [demoSessionId], references: [id], onDelete: Cascade)
}

model Call {
  id             String      @id @default(cuid())
  demoSessionId  String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  provider       String
  providerCallId String
  twilioCallSid  String?     // Add Twilio call SID for tracking
  status         CallStatus  @default(INITIATED)
  startedAt      DateTime?
  connectedAt    DateTime?
  endedAt        DateTime?
  durationSec    Int?
  summary        String?
  transcriptUrl  String?
  recordingUrl   String?     // Add recording URL
  rating         Int?        // Add call rating (1-5)
  rawMeta        Json?

  DemoSession    DemoSession @relation(fields: [demoSessionId], references: [id], onDelete: Cascade)
  webhookEvents  WebhookEvent[]
  booking        Booking?

  @@unique([provider, providerCallId])
  @@index([demoSessionId])
  @@index([status])
  @@index([twilioCallSid])
}

model WebhookEvent {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  callId      String
  provider    String
  eventType   String
  dedupeKey   String?
  rawPayload  Json
  processedAt DateTime?

  Call        Call     @relation(fields: [callId], references: [id], onDelete: Cascade)

  @@unique([provider, dedupeKey])
  @@index([eventType])
}

model Booking {
  id         String      @id @default(cuid())
  callId     String      @unique
  createdAt  DateTime    @default(now())
  status     String      @default("confirmed")
  start      DateTime
  end        DateTime
  location   String?
  reference  String?
  notes      String?

  Call       Call        @relation(fields: [callId], references: [id], onDelete: Cascade)
}

model CandidatePlace {
  id            String       @id @default(cuid())
  demoSessionId String
  rank          Int
  placeId       String
  name          String
  address       String
  website       String?
  phone         String?
  types         String[]
  rating        Float?
  userRatings   Int?

  DemoSession   DemoSession  @relation(fields: [demoSessionId], references: [id], onDelete: Cascade)

  @@index([demoSessionId])
  @@index([placeId])
}

// Dashboard Models

model PhoneNumber {
  id           String           @id @default(cuid())
  sessionId    String           // Dashboard session ID
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  twilioSid    String           @unique // Twilio phone number SID
  number       String           @unique // E164 format phone number
  areaCode     String
  city         String
  state        String
  country      String           @default("US")
  status       PhoneNumberStatus @default(ACTIVE)
  provider     String           @default("twilio")
  
  @@index([sessionId])
  @@index([number])
}

model CallForwardingConfig {
  id                  String               @id @default(cuid())
  sessionId           String               @unique
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  phoneSystemType     PhoneSystemType
  provider            String
  userPhoneNumber     String               // User's actual phone number
  funnderPhoneNumber  String               // Funnder AI phone number
  status              CallForwardingStatus @default(PENDING)
  setupInstructions   String[]             // Array of setup instructions
  lastTestedAt        DateTime?
  
  @@index([sessionId])
  @@index([status])
}

model TestCallConfig {
  id              String    @id @default(cuid())
  sessionId       String    @unique
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  phoneNumber     String    // Funnder phone number for testing
  allowedNumbers  String[]  // Array of allowed test phone numbers
  status          String    @default("active") // "active" or "inactive"
  
  @@index([sessionId])
}

model BillingInfo {
  id                  String    @id @default(cuid())
  sessionId           String    @unique
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  trialMinutes        Int       @default(60) // Trial minutes allocated
  usedMinutes         Int       @default(0)  // Minutes used
  remainingMinutes    Int       @default(60) // Remaining trial minutes
  trialEndDate        DateTime
  hasPaymentMethod    Boolean   @default(false)
  status              String    @default("trial") // "trial", "active", "expired", "cancelled"
  plan                String    @default("trial") // "trial", "basic", "premium"
  pricePerMinute      Float     @default(0.02) // Price per minute in USD
  
  @@index([sessionId])
  @@index([status])
}

model AgentConfig {
  id                        String    @id @default(cuid())
  sessionId                 String    @unique
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
  agentName                 String    @default("Funnder")
  greeting                  String
  backgroundNoise           String    @default("Office")
  includeRecordingDisclaimer Boolean  @default(true)
  faqs                      Json      // Array of {question, answer} objects
  customQuestions           String[]  // Array of custom questions
  status                    String    @default("active") // "active", "inactive", "training"
  
  @@index([sessionId])
  @@index([status])
}

model CallMetrics {
  id              String   @id @default(cuid())
  sessionId       String   @unique
  date            DateTime @default(now())
  totalCalls      Int      @default(0)
  answeredCalls   Int      @default(0)
  missedCalls     Int      @default(0)
  averageDuration Float    @default(0)
  successRate     Float    @default(0)
  
  @@index([sessionId])
  @@index([date])
}







